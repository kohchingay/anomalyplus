# -*- coding: utf-8 -*-
"""anomaly.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tV3NdW-QVVcM3Dk651SETBhWmOkphPwm
"""

pip install pandas scikit-learn matplotlib openpyxl

import pandas as pd
from sklearn.ensemble import IsolationForest

from google.colab import files
uploaded = files.upload()

# Load and clean the Excel file (columns D to G)
df = pd.read_excel("Exchange Rates.xlsx", usecols="D:G")
df.columns = ["EUR", "GBP", "USD", "MYR"]  # Normalize column names

# Drop rows with missing or non-numeric values
df = df.dropna()
df = df[df.applymap(lambda x: isinstance(x, (int, float)))]

# Train Isolation Forest models for each currency
models = {}
for currency in df.columns:
    model = IsolationForest(contamination=0.01, random_state=42)
    model.fit(df[[currency]])
    models[currency] = model

# Prompt user to enter current exchange rates
print("Please enter today's exchange rates:")
user_input = {}
for currency in df.columns:
    while True:
        try:
            rate = float(input(f"{currency}: ").strip())
            user_input[currency] = rate
            break
        except ValueError:
            print("Invalid input. Please enter a numeric value.")

# Create a DataFrame from user input
user_df = pd.DataFrame([user_input])

# Predict anomalies
anomalies = {}
for currency in df.columns:
    prediction = models[currency].predict(user_df[[currency]])[0]
    anomalies[currency] = prediction

# Report result
anomalous_currencies = [cur for cur, pred in anomalies.items() if pred == -1]
if anomalous_currencies:
    print("\n⚠️ Anomaly detected in the following currency/currencies:")
    for cur in anomalous_currencies:
        print(f"- {cur} (entered rate: {user_input[cur]})")
else:
    print("\n✅ No anomalies detected in the entered exchange rates.")
